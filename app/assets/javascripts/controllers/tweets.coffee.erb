Views.tweets =
  _: ->
    vm = new Vue
      el: ".statuses"
      data:
        statuses: []
        loading: false
        next: null
        prev: null
      methods:
        clear: ->
          this.statuses = []
        loadNext: (nextUrl = null, queryString = null) ->
          vm = this
          if vm.loading || (!nextUrl && !vm.next)
            return
          vm.loading = true
          superagent
            .get(nextUrl || vm.next)
            .query(queryString || {})
            .accept "json"
            .end (err, res) ->
              json = res.body
              vm.statuses = vm.statuses.concat(json.statuses)
              vm.next = json.next
              vm.loading = false

    content = $(".statuses")
    $(window).scroll ->
      if (content.offset().top + content.height()) - ($(document).scrollTop() + $(window).height()) < 100
        vm.loadNext()

    if !Views.tweets[Helpers.action()]
      query = Helpers.given_parameters()
      if Helpers.user_screen_name()
        query.screen_name = Helpers.user_screen_name()
      url = "/i/api/" + Helpers.controller() + "/" + Helpers.action() + ".json"
      vm.loadNext(url, query)
  show: ->
    _query = Helpers.given_parameters()
    _query.id = Helpers.tweet_id()

    vm = new Vue
      el: ".statuses"
      data:
        statuses: []
        loading: false
      methods:
        reload: (e = null) ->
          e.preventDefault() if e
          return if this.loading
          vm = this
          vm.loading = true
          superagent
            .post "/i/api/tweets/update.json"
            .query _query
            .send { authenticity_token: Helpers.authenticity_token() }
            .accept "json"
            .end (err, res) ->
              json = res.body
              vm.statuses = json.statuses
              vm.loading = false
        load: ->
          return if this.loading
          vm = this
          vm.loading = true
          superagent
            .get "/i/api/tweets/show.json"
            .query _query
            .accept "json"
            .end (err, res) ->
              json = res.body
              vm.statuses = json.statuses
              vm.loading = false
    vm.load()
